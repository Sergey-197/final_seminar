# N = int(input('Введите количество элементов в массиве: '))
# lst_1 = [1, 1, 2, 3, 4]
# # for i in range (N):
# #     A = int(input('Введите значения массива: '))
# #     lst_1.append(A)
# X = int(input('Введите значение X: '))
# num = lst_1.count(X)
# print(num)
# print(f'-> {num}')


# N = int(input('Введите количество элементов в массиве: '))
# lst_1 = list ()
# for i in range (N):
#     A = int(input('Введите значения массива: '))
#     lst_1.append(A)
# X = int(input('Введите значение X: '))
# lst_1 = [i for i in lst_1 if i != X]
# result_elements = []
# min = max(lst_1)
# for i in lst_1:
#     diff = abs(i - X)
#     if min > diff:
#         min = diff
#         result_elements = [i]
#     elif min == diff:
#          result_elements.append(i)
# for i in result_elements:
#     print(f'-> {i}')



# data = [{"V": "S001"}, {"V": "S002"}, {"VI": "S001"},  {"VI": "S005 "},
#     {"VII": "S005 "}, {"V": "S009"}, {"VIII": "S007"}]

# unq = set(value.strip() for item in data for value in item.values())
# print(unq)


# Задача №25. Решение в группах
# Напишите программу, которая принимает на вход
# строку, и отслеживает, сколько раз каждый символ
# уже встречался. Количество повторов добавляется к
# символам с помощью постфикса формата _n.
# Input: a a a b c a a d c d d
# Output: a a_1 a_2 b c a_3 a_4 d c_1 d_1 d_2
# Для решения данной задачи используйте функцию
# .split()


# Задача №27. Решение в группах
# Пользователь вводит текст(строка). Словом считается
# последовательность непробельных символов идущих
# подряд, слова разделены одним или большим числом
# пробелов. Определите, сколько различных слов
# содержится в этом тексте.
# Input: She sells sea shells on the sea shore The shells
# that she sells are sea shells I'm sure.So if she sells sea
# shells on the sea shore I'm sure that the shells are sea
# shore shells
# Output: 13


# Искусственный интеллект Антон, созданный Гилфойлом, взломал сеть умных холодильников. Теперь он использует их в качестве серверов "Пегого дудочника". Помогите владельцу фирмы отыскать все зараженные холодильники.

# Для каждого холодильника существует строка с данными, состоящая из строчных букв и цифр, и если в ней присутствует слово "anton" (необязательно рядом стоящие буквы, главное наличие последовательности букв), то холодильник заражен и нужно вывести номер холодильника, нумерация начинается с единицы

# Формат входных данных
# В первой строке подаётся число 
# n
# n – количество холодильников. В последующих 
# n
# n строках вводятся строки, содержащие латинские строчные буквы и цифры, в каждой строке от 
# 5
# 5 до 
# 100
# 100 символов.

# Формат выходных данных
# Программа должна вывести номера зараженных холодильников через пробел. Если таких холодильников нет, ничего выводить не нужно.

# Формат входных данных
# В первой строке подаётся число 
# n
# n – количество холодильников. В последующих 
# n
# n строках вводятся строки, содержащие латинские строчные буквы и цифры, в каждой строке от 
# 5
# 5 до 
# 100
# 100 символов.

# Формат выходных данных
# Программа должна вывести номера зараженных холодильников через пробел. Если таких холодильников нет, ничего выводить не нужно.


# Sample Input 1:
# 6
# 222anton456
# a1n1t1o1n1
# 0000a0000n00t00000o000000n
# gylfole
# richard
# ant0n
# Sample Output 1:
# 1 2 3
# Sample Input 2:
# 9
# osfjwoiergwoignaewpjofwoeijfnwfonewfoignewtowenffnoeiwowjfninoiwfen
# anton
# aoooooooooontooooo
# elelelelelelelelelel
# ntoneeee
# tonee
# 253235235a5323352n25235352t253523523235oo235523523523n
# antoooooooooooooooooooooooooooooooooooooooooooooooooooon
# unton
# Sample Output 2:
# 1 2 7 8


# set1.intersection(set2) # к первой задаче 4 практ работа
# set1 & set2


# звдача 1

# Требуется вычислить, сколько раз встречается некоторое число k в массиве list_1.

# Найдите количество и выведите его.
# list_1 = [1, 2, 3, 4, 5]
# k = 3


# count = 0
# for i in range(len(list_1)):
#     if list_1[i] == k:
#         count += 1
# print(count)


#   Задача 2
# Требуется найти в массиве list_1 самый близкий по значению элемент к заданному числу k и вывести его.
# Считать, что такой элемент может быть только один. Если значение k совпадает с этим элементом - выведите его.

# m = abs(k - list_1[0])  # модуль числа
# number = list_1[0]
# for i in range(1, len(list_1)):
#     if m > abs(list_1[i] - k):
#         m = abs(list_1[i] - k)
#         number = list_1[i]
# print(number)


# Задача 3 
 
# В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.

# В случае с английским алфавитом очки распределяются так:
# scrable = {
# 'A': 1, 'E': 1, 'I': 1, 'O': 1, 'U': 1, 'L': 1, 'N': 1, 'S': 1, 'T': 1, 'R': 1, 'А': 1, 'В': 1, 'Е': 1,
# 'И': 1, 'Н': 1, 'О': 1, 'Р': 1, 'С': 1, 'Т': 1, 'D': 2, 'G': 2, 'Д': 2, 'К': 2, 'Л': 2, 'М': 2, 'П': 2,
# 'У': 2, 'B': 3, 'C': 3, 'M': 3, 'P': 3, 'Б': 3, 'Г': 3, 'Ё': 3, 'Ь': 3, 'Я': 3, 'F': 4, 'H': 4, 'V': 4,
# 'W': 4, 'Y': 4, 'Й': 4, 'Ы': 4, 'K': 5, 'Ж': 5, 'З': 5, 'Х': 5, 'Ц': 5, 'Ч': 5, 'J': 8, 'X': 8, 'Ш': 8,
# 'Э': 8, 'Ю': 8, 'Q': 10, 'Z': 10, 'Ф': 10, 'Щ': 10, 'Ъ': 10}
# word = str.upper(input('Введите слово: '))
# s = 0
# for i in word:
#     s += scrable[i]
# print(s, 'очков')


# k = 'ноутбук'
# k = k.upper()
# d = {'AEIOULNSTRАВЕИНОРСТ': 1, 'DGДКЛМПУ': 2, 'BCMPБГЁЬЯ': 3, 'FHVWYЙЫ': 4, 'KЖЗХЦЧ': 5,
#        'JXШЭЮ': 8, 'QZФЩЪ': 10}
# print(sum(map(lambda x: next(value for key, value in d.items() if x in key), k)))


# РЕКУРСИЯ

# Задача №31. 

# Решение в группах

# Последовательностью Фибоначчи называется последовательность чисел a0, a1, ..., an, ..., где

# a0 = 0, a1 = 1, ak = ak-1 + ak-2 (k > 1).

# Требуется найти N-е число Фибоначчи

 

# def fib(n):
#     n0 = 0
#     n1 = 1
#     nk = nk - 1 + nk - 2 (k > 1)
#     for k in range(n):
#         fib = n -1 + n - 2 (k > 1)
# print(fib)

# Найти факториал числа 
# print('Введите число:')
# a = int(input())
# b = 1
# def Factorial(n, f):
#     if n == 0:
#         return f
#     return Factorial(n-1, f*n)
# print(Factorial(a, b))

 
# n =int(input('Введите число: ')) 
# def f(n,f):
#     f = 1
# while n > 1:
#     f *= n
#     n -= 1
# print(f )



# Задача №35. Решение в группах
# Напишите функцию, которая принимает одно число и проверяет, является ли оно простым
# Напоминание: Простое число - это число, которое имеет 2 делителя: 1 и n(само число)
# Input: 5
# Output: yes


# Задача No37. Решение в группах
# Дано натуральное число N и последовательность из N элементов. Требуется вывести эту последовательность в обратном порядке.
# Примечание. В программе запрещается объявлять массивы и использовать циклы (даже для ввода и вывода).
# Input: 2 -> 3 4 Output: 4 3


num = 3
def count(day):
    if day == 0:
        return '+'
    number = input()
    return count(day-1) + number

print(count(num))








